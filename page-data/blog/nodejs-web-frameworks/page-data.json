{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/nodejs-web-frameworks","webpackCompilationHash":"66e2881ea1ce936a9a04","result":{"data":{"markdownRemark":{"html":"<h1>Express</h1>\n<p><a href=\"https://expressjs.com/\">Website</a> <a href=\"https://github.com/expressjs/express/\">GitHub</a></p>\n<p>Install: <code>npm install express --save</code></p>\n<p>Express is a minimal framework for developing Node.js web applications. Many of the other frameworks in this list are based on Express with additional useful features to help speed up development or apply a design pattern to aid maintainability. Express is unopinionated and the go to option for a Node.js webserver.</p>\n<p>Two of the main concepts required for developing Express-based applications is <a href=\"https://expressjs.com/en/guide/routing.html\">routing</a> and <a href=\"https://expressjs.com/en/guide/using-middleware.html\">middleware</a>. Express request handlers are JavaScript functions that accept 2 or more arguments: <code>req</code> = <a href=\"https://expressjs.com/en/4x/api.html#req\">Request</a>, <code>res</code> = <a href=\"https://expressjs.com/en/4x/api.html#res\">Response</a>, and <code>next</code> = function to call next middleware. Which request handler is called is determined by the routes registered to the <a href=\"https://expressjs.com/en/4x/api.html#router\">router</a> and the URL of the request.</p>\n<p>Express also supports a range of <a href=\"https://expressjs.com/en/guide/using-template-engines.html\">template engines</a> out of the box, including <a href=\"https://pugjs.org/api/getting-started.html\">Pug</a>, <a href=\"https://www.npmjs.com/package/mustache\">Mustache</a>, and <a href=\"https://www.npmjs.com/package/ejs\">EJS</a> which support features like partial templates, variable interpolation and conditional branching within HTML templates.</p>\n<p>The <a href=\"https://expressjs.com/en/starter/generator.html\">express-generator</a> package allows for quick generation of a skeleton Express application via a command line interface (CLI).</p>\n<h1>Loopback</h1>\n<p><a href=\"https://loopback.io/\">Website</a>\n<a href=\"https://github.com/strongloop/loopback/\">GitHub</a></p>\n<p>Install: <code>npm install -g loopback-cli</code></p>\n<p>Loopback is a framework based on Express for rapidly building REST APIs. Development is maintained by IBM and integration with <a href=\"https://developer.ibm.com/apiconnect\">IBM Connect</a> is provided.</p>\n<p>Loopback has a command line interface for creating models, relations, and access control rules reducing time setting up boilerplate code. There's also an web-based API explorer that allows you to view and test your REST API routes.</p>\n<p>It can also support a range of popular database management systems via <a href=\"http://loopback.io/doc/en/lb3/Database-connectors.html\">database connectors</a>.</p>\n<p><a href=\"http://loopback.io/resources/#compare\">A comparison of Loopback vs other frameworks</a></p>\n<h1>Sails.js</h1>\n<p><a href=\"https://sailsjs.com/\">Website</a>\n<a href=\"https://github.com/balderdashy/sails/\">GitHub</a></p>\n<p>Install: <code>npm install -g sails</code></p>\n<p>Sails is a framework based on Express implementing a Model-View-Controller (MVC) design pattern similar to <a href=\"http://rubyonrails.org/\">Ruby on Rails</a>.</p>\n<p>Sails uses an ORM called <a href=\"https://github.com/balderdashy/waterline\">Waterline</a> for defining database models which supports a range of database connectors.</p>\n<p><a href=\"https://sailsjs.com/documentation/concepts/blueprints\">Blueprints</a> allow for rapid development of REST APIs by generating common CRUD methods.</p>\n<h1>Nest</h1>\n<p><a href=\"https://nestjs.com/\">Website</a>\n<a href=\"https://github.com/kamilmysliwiec/nest\">GitHub</a></p>\n<p>Install: <code>git clone https://github.com/nestjs/typescript-starter.git &#x3C;project-name></code></p>\n<p>Nest is a framework based on Express that implements a very similar architecture to an <a href=\"https://angular.io\">Angular</a> application, including support for TypeScript.</p>\n<h1>hapi.js</h1>\n<p><a href=\"https://hapijs.com/\">Website</a>\n<a href=\"https://github.com/hapijs/hapi\">GitHub</a></p>\n<p>hapi.js is a web application framework that handles requests and routing similar to Express. There are also a range of <a href=\"https://hapijs.com/plugins\">community plugins</a> for handling common web application requirements such as authentication, authorization, and templating.</p>","frontmatter":{"date":"January 23, 2018","path":"/blog/nodejs-web-frameworks","title":"Node.js Web Frameworks"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}